name: bluesky-bot2-70-30

on:
  schedule:
    - cron: "15 16,18-21 * * *"
  workflow_dispatch: {}

jobs:
  run-bot2:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # DEBUG : montre ce qui a été cloné (chemins exacts !)
      - name: Show workspace
        run: |
          pwd
          echo "--- repo root ---"
          ls -la
          echo "--- try bluesky_compte2 ---"
          ls -la bluesky_compte2 || true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      # Installe selon ce qui existe (racine ou sous-dossier) ; fallback = atproto
      - name: Install deps (auto-detect)
        run: |
          if [ -f bluesky_compte2/requirements.txt ]; then
            pip install -r bluesky_compte2/requirements.txt
            echo "CODE_DIR=bluesky_compte2" >> $GITHUB_ENV
          elif [ -f requirements.txt ]; then
            pip install -r requirements.txt
            echo "CODE_DIR=." >> $GITHUB_ENV
          else
            pip install "atproto>=0.0.45"
            echo "CODE_DIR=bluesky_compte2" >> $GITHUB_ENV
          fi

      - name: Compute day key
        id: day
        run: echo "day=$(date +%F)" >> $GITHUB_OUTPUT

      # Cache du state (chemin dépendant de CODE_DIR)
      - name: Restore bot2 state cache
        id: cache-bot2
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.CODE_DIR }}/bot2_state.json
          key: bot2state-${{ steps.day.outputs.day }}
          restore-keys: |
            bot2state-

      # (Optionnel) Voir le state avant
      - name: Show bot2_state.json (before)
        run: cat "${{ env.CODE_DIR }}/bot2_state.json" || echo "{}"

      - name: Run bot2
        env:
          BSKY2_HANDLE: ${{ secrets.BSKY2_HANDLE }}
          BSKY2_APP_PASSWORD: ${{ secrets.BSKY2_APP_PASSWORD }}
          BOT2_MAX_ENG_PER_RUN: ${{ vars.BOT2_MAX_ENG_PER_RUN || '1' }}
          BOT2_REPOST_LIMIT:    ${{ vars.BOT2_REPOST_LIMIT    || '2' }}
          BOT2_DISCOVERY_WEIGHT: ${{ vars.BOT2_DISCOVERY_WEIGHT || '0.4' }}
          BOT2_LIKE_LIMIT:      ${{ vars.BOT2_LIKE_LIMIT      || '2' }}
          BOT2_POST_COOLDOWN_DAYS: ${{ vars.BOT2_POST_COOLDOWN_DAYS || '30' }}
          BOT2_SOURCE_COOLDOWN_DAYS: ${{ vars.BOT2_SOURCE_COOLDOWN_DAYS || '3' }}
          BOT2_QUOTE_SHARE: ${{ vars.BOT2_QUOTE_SHARE || '0.66' }}
          BOT2_SOURCE_HANDLES: ${{ vars.BOT2_SOURCE_HANDLES }}
          BOT2_QUERY: ${{ vars.BOT2_QUERY }}
          BOT2_LINK_SITE: ${{ vars.BOT2_LINK_SITE }}
          BOT2_LINK_OPENSEA: ${{ vars.BOT2_LINK_OPENSEA }}
        run: python "${{ env.CODE_DIR }}/bot2.py"

      # (Optionnel) Voir le state après
      - name: Show bot2_state.json (after)
        run: cat "${{ env.CODE_DIR }}/bot2_state.json" || echo "{}"

      - name: Save updated bot2 state cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: ${{ env.CODE_DIR }}/bot2_state.json
          key: bot2state-${{ steps.day.outputs.day }}-${{ github.run_id }}
